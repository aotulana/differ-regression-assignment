<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="0" total="17" passed="14">
  <reporter-output>
  </reporter-output>
  <suite name="Differ Regression Test Suite" duration-ms="2106" started-at="2018-11-12T19:13:21Z" finished-at="2018-11-12T19:13:23Z">
    <groups>
    </groups>
    <test name="Differ Regression Tests" duration-ms="2106" started-at="2018-11-12T19:13:21Z" finished-at="2018-11-12T19:13:23Z">
      <class name="requests.SetSideValueTest">
        <test-method status="PASS" signature="testEmptyBodyShouldReturnBadRequest()[pri:0, instance:requests.SetSideValueTest@6df97b55]" name="testEmptyBodyShouldReturnBadRequest" duration-ms="1342" started-at="2018-11-12T19:13:21Z" finished-at="2018-11-12T19:13:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyBodyShouldReturnBadRequest -->
        <test-method status="PASS" signature="testEmptyStringSideShouldReturnSideNameNotSupportedException()[pri:0, instance:requests.SetSideValueTest@6df97b55]" name="testEmptyStringSideShouldReturnSideNameNotSupportedException" duration-ms="20" started-at="2018-11-12T19:13:22Z" finished-at="2018-11-12T19:13:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyStringSideShouldReturnSideNameNotSupportedException -->
        <test-method status="PASS" signature="testHtmlContentTypeShouldReturnUnsupportedMediaType()[pri:0, instance:requests.SetSideValueTest@6df97b55]" name="testHtmlContentTypeShouldReturnUnsupportedMediaType" duration-ms="17" started-at="2018-11-12T19:13:22Z" finished-at="2018-11-12T19:13:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHtmlContentTypeShouldReturnUnsupportedMediaType -->
        <test-method status="PASS" signature="testLeftSideShouldReturnAcceptedLeftSideBase64Data()[pri:0, instance:requests.SetSideValueTest@6df97b55]" name="testLeftSideShouldReturnAcceptedLeftSideBase64Data" duration-ms="27" started-at="2018-11-12T19:13:22Z" finished-at="2018-11-12T19:13:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLeftSideShouldReturnAcceptedLeftSideBase64Data -->
        <test-method status="PASS" signature="testLeftandRideSidesShouldReturnAcceptedDataForBothSides()[pri:0, instance:requests.SetSideValueTest@6df97b55]" name="testLeftandRideSidesShouldReturnAcceptedDataForBothSides" duration-ms="44" started-at="2018-11-12T19:13:23Z" finished-at="2018-11-12T19:13:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLeftandRideSidesShouldReturnAcceptedDataForBothSides -->
        <test-method status="PASS" signature="testNoContentTypeShouldReturnUnsupportedMediaType()[pri:0, instance:requests.SetSideValueTest@6df97b55]" name="testNoContentTypeShouldReturnUnsupportedMediaType" duration-ms="13" started-at="2018-11-12T19:13:23Z" finished-at="2018-11-12T19:13:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoContentTypeShouldReturnUnsupportedMediaType -->
        <test-method status="PASS" signature="testNonBase64DataShouldReturnDataNotBase64Exception()[pri:0, instance:requests.SetSideValueTest@6df97b55]" name="testNonBase64DataShouldReturnDataNotBase64Exception" duration-ms="27" started-at="2018-11-12T19:13:23Z" finished-at="2018-11-12T19:13:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNonBase64DataShouldReturnDataNotBase64Exception -->
        <test-method status="PASS" signature="testNonIntegerIDShouldReturnMethodNotAllowed()[pri:0, instance:requests.SetSideValueTest@6df97b55]" name="testNonIntegerIDShouldReturnMethodNotAllowed" duration-ms="20" started-at="2018-11-12T19:13:23Z" finished-at="2018-11-12T19:13:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNonIntegerIDShouldReturnMethodNotAllowed -->
        <test-method status="PASS" signature="testPutMethodShouldReturnMethodNotAllowed()[pri:0, instance:requests.SetSideValueTest@6df97b55]" name="testPutMethodShouldReturnMethodNotAllowed" duration-ms="14" started-at="2018-11-12T19:13:23Z" finished-at="2018-11-12T19:13:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPutMethodShouldReturnMethodNotAllowed -->
        <test-method status="PASS" signature="testRightSideShouldReturnAcceptedRightSideBase64Data()[pri:0, instance:requests.SetSideValueTest@6df97b55]" name="testRightSideShouldReturnAcceptedRightSideBase64Data" duration-ms="21" started-at="2018-11-12T19:13:23Z" finished-at="2018-11-12T19:13:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRightSideShouldReturnAcceptedRightSideBase64Data -->
        <test-method status="PASS" signature="testTextContentTypeShouldReturnUnsupportedMediaType()[pri:0, instance:requests.SetSideValueTest@6df97b55]" name="testTextContentTypeShouldReturnUnsupportedMediaType" duration-ms="10" started-at="2018-11-12T19:13:23Z" finished-at="2018-11-12T19:13:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTextContentTypeShouldReturnUnsupportedMediaType -->
        <test-method status="PASS" signature="testUndefinedSideShouldReturnSideNameNotSupportedException()[pri:0, instance:requests.SetSideValueTest@6df97b55]" name="testUndefinedSideShouldReturnSideNameNotSupportedException" duration-ms="23" started-at="2018-11-12T19:13:23Z" finished-at="2018-11-12T19:13:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUndefinedSideShouldReturnSideNameNotSupportedException -->
        <test-method status="PASS" signature="testXmlContentTypeShouldReturnUnsupportedMediaType()[pri:0, instance:requests.SetSideValueTest@6df97b55]" name="testXmlContentTypeShouldReturnUnsupportedMediaType" duration-ms="14" started-at="2018-11-12T19:13:23Z" finished-at="2018-11-12T19:13:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testXmlContentTypeShouldReturnUnsupportedMediaType -->
      </class> <!-- requests.SetSideValueTest -->
      <class name="requests.DifferentiateTest">
        <test-method status="PASS" signature="setBaseURI()[pri:0, instance:requests.DifferentiateTest@3cbbc1e0]" name="setBaseURI" is-config="true" duration-ms="316" started-at="2018-11-12T19:13:21Z" finished-at="2018-11-12T19:13:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setBaseURI -->
        <test-method status="PASS" signature="setBaseURI()[pri:0, instance:requests.SetSideValueTest@6df97b55]" name="setBaseURI" is-config="true" duration-ms="0" started-at="2018-11-12T19:13:21Z" finished-at="2018-11-12T19:13:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setBaseURI -->
        <test-method status="FAIL" signature="testDifferAgainstNullLeftSideShouldDifferentLength()[pri:0, instance:requests.DifferentiateTest@3cbbc1e0]" name="testDifferAgainstNullLeftSideShouldDifferentLength" duration-ms="60" started-at="2018-11-12T19:13:23Z" finished-at="2018-11-12T19:13:23Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Left side contains no value.] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Left side contains no value.] but found [null]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at requests.DifferentiateTest.testDifferAgainstNullLeftSideShouldDifferentLength(DifferentiateTest.java:47)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:383)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:344)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:417)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDifferAgainstNullLeftSideShouldDifferentLength -->
        <test-method status="FAIL" signature="testDifferAgainstNullRightSideShouldDifferentLength()[pri:0, instance:requests.DifferentiateTest@3cbbc1e0]" name="testDifferAgainstNullRightSideShouldDifferentLength" duration-ms="40" started-at="2018-11-12T19:13:23Z" finished-at="2018-11-12T19:13:23Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Right side contains no value.] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Right side contains no value.] but found [null]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at requests.DifferentiateTest.testDifferAgainstNullRightSideShouldDifferentLength(DifferentiateTest.java:60)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:383)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:344)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:417)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDifferAgainstNullRightSideShouldDifferentLength -->
        <test-method status="FAIL" signature="testDifferNotInitializedIDShouldReturnNotFound()[pri:0, instance:requests.DifferentiateTest@3cbbc1e0]" name="testDifferNotInitializedIDShouldReturnNotFound" duration-ms="23" started-at="2018-11-12T19:13:23Z" finished-at="2018-11-12T19:13:23Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <404> but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <404> but was <200>.

at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:60)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:235)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:483)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:655)
at sun.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:123)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:131)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:119)
at requests.DifferentiateTest.testDifferNotInitializedIDShouldReturnNotFound(DifferentiateTest.java:75)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:383)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:344)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:417)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDifferNotInitializedIDShouldReturnNotFound -->
        <test-method status="PASS" signature="testDifferOfEqualSidesShouldReturnEqual()[pri:0, instance:requests.DifferentiateTest@3cbbc1e0]" name="testDifferOfEqualSidesShouldReturnEqual" duration-ms="47" started-at="2018-11-12T19:13:23Z" finished-at="2018-11-12T19:13:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDifferOfEqualSidesShouldReturnEqual -->
      </class> <!-- requests.DifferentiateTest -->
    </test> <!-- Differ Regression Tests -->
  </suite> <!-- Differ Regression Test Suite -->
</testng-results>
