<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="25" passed="25">
  <reporter-output>
  </reporter-output>
  <suite name="Differ Regression Test Suite" duration-ms="2297" started-at="2020-01-17T15:37:28Z" finished-at="2020-01-17T15:37:30Z">
    <groups>
    </groups>
    <test name="Differ Regression Tests" duration-ms="2297" started-at="2020-01-17T15:37:28Z" finished-at="2020-01-17T15:37:30Z">
      <class name="requests.DifferServiceTest">
        <test-method status="PASS" signature="setBaseURI()[pri:0, instance:requests.DifferServiceTest@77b52d12]" name="setBaseURI" is-config="true" duration-ms="317" started-at="2020-01-17T15:37:28Z" finished-at="2020-01-17T15:37:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setBaseURI -->
        <test-method status="PASS" signature="setBaseURI()[pri:0, instance:requests.SideServiceTest@614c5515]" name="setBaseURI" is-config="true" duration-ms="1" started-at="2020-01-17T15:37:28Z" finished-at="2020-01-17T15:37:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setBaseURI -->
        <test-method status="PASS" signature="when_DiffRequestIsDelete_Expect_405MethodNotAllowed()[pri:0, instance:requests.DifferServiceTest@77b52d12]" name="when_DiffRequestIsDelete_Expect_405MethodNotAllowed" duration-ms="43" started-at="2020-01-17T15:37:30Z" finished-at="2020-01-17T15:37:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- when_DiffRequestIsDelete_Expect_405MethodNotAllowed -->
        <test-method status="PASS" signature="uniqueIDForEachMethod()[pri:0, instance:requests.DifferServiceTest@77b52d12]" name="uniqueIDForEachMethod" is-config="true" duration-ms="0" started-at="2020-01-17T15:37:30Z" finished-at="2020-01-17T15:37:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- uniqueIDForEachMethod -->
        <test-method status="PASS" signature="uniqueIDForEachMethod()[pri:0, instance:requests.DifferServiceTest@77b52d12]" name="uniqueIDForEachMethod" is-config="true" duration-ms="1" started-at="2020-01-17T15:37:30Z" finished-at="2020-01-17T15:37:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- uniqueIDForEachMethod -->
        <test-method status="PASS" signature="when_EqualSidesAreDiffed_Expect_Equal()[pri:0, instance:requests.DifferServiceTest@77b52d12]" name="when_EqualSidesAreDiffed_Expect_Equal" duration-ms="64" started-at="2020-01-17T15:37:30Z" finished-at="2020-01-17T15:37:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- when_EqualSidesAreDiffed_Expect_Equal -->
        <test-method status="PASS" signature="when_IDThatIsNotInitializedIsDiffed_Expect_IDNotInitialized()[pri:0, instance:requests.DifferServiceTest@77b52d12]" name="when_IDThatIsNotInitializedIsDiffed_Expect_IDNotInitialized" duration-ms="16" started-at="2020-01-17T15:37:30Z" finished-at="2020-01-17T15:37:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- when_IDThatIsNotInitializedIsDiffed_Expect_IDNotInitialized -->
        <test-method status="PASS" signature="uniqueIDForEachMethod()[pri:0, instance:requests.DifferServiceTest@77b52d12]" name="uniqueIDForEachMethod" is-config="true" duration-ms="0" started-at="2020-01-17T15:37:30Z" finished-at="2020-01-17T15:37:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- uniqueIDForEachMethod -->
        <test-method status="PASS" signature="uniqueIDForEachMethod()[pri:0, instance:requests.DifferServiceTest@77b52d12]" name="uniqueIDForEachMethod" is-config="true" duration-ms="0" started-at="2020-01-17T15:37:30Z" finished-at="2020-01-17T15:37:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- uniqueIDForEachMethod -->
        <test-method status="PASS" signature="when_SidesAreDiffedAndLeftSideIsNull_Expect_DifferentLengthAndLeftHasNoValue()[pri:0, instance:requests.DifferServiceTest@77b52d12]" name="when_SidesAreDiffedAndLeftSideIsNull_Expect_DifferentLengthAndLeftHasNoValue" duration-ms="25" started-at="2020-01-17T15:37:30Z" finished-at="2020-01-17T15:37:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- when_SidesAreDiffedAndLeftSideIsNull_Expect_DifferentLengthAndLeftHasNoValue -->
        <test-method status="PASS" signature="uniqueIDForEachMethod()[pri:0, instance:requests.DifferServiceTest@77b52d12]" name="uniqueIDForEachMethod" is-config="true" duration-ms="0" started-at="2020-01-17T15:37:30Z" finished-at="2020-01-17T15:37:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- uniqueIDForEachMethod -->
        <test-method status="PASS" signature="when_SidesOfDifferentLengthsAreDiffed_Expect_DifferentLength()[pri:0, instance:requests.DifferServiceTest@77b52d12]" name="when_SidesOfDifferentLengthsAreDiffed_Expect_DifferentLength" duration-ms="35" started-at="2020-01-17T15:37:30Z" finished-at="2020-01-17T15:37:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- when_SidesOfDifferentLengthsAreDiffed_Expect_DifferentLength -->
        <test-method status="PASS" signature="when_SidesOfSameLengthButDifferentCharactersAreDiffed_Expect_PositionOfDifferentCharacters()[pri:0, instance:requests.DifferServiceTest@77b52d12]" name="when_SidesOfSameLengthButDifferentCharactersAreDiffed_Expect_PositionOfDifferentCharacters" duration-ms="35" started-at="2020-01-17T15:37:30Z" finished-at="2020-01-17T15:37:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- when_SidesOfSameLengthButDifferentCharactersAreDiffed_Expect_PositionOfDifferentCharacters -->
        <test-method status="PASS" signature="uniqueIDForEachMethod()[pri:0, instance:requests.DifferServiceTest@77b52d12]" name="uniqueIDForEachMethod" is-config="true" duration-ms="0" started-at="2020-01-17T15:37:30Z" finished-at="2020-01-17T15:37:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- uniqueIDForEachMethod -->
        <test-method status="PASS" signature="uniqueIDForEachMethod()[pri:0, instance:requests.DifferServiceTest@77b52d12]" name="uniqueIDForEachMethod" is-config="true" duration-ms="0" started-at="2020-01-17T15:37:30Z" finished-at="2020-01-17T15:37:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- uniqueIDForEachMethod -->
        <test-method status="PASS" signature="when_SidesOfSameLengthButDifferentSuccessiveCharactersAreDiffed_Expect_RangedPositionOfDifferentCharacters()[pri:0, instance:requests.DifferServiceTest@77b52d12]" name="when_SidesOfSameLengthButDifferentSuccessiveCharactersAreDiffed_Expect_RangedPositionOfDifferentCharacters" duration-ms="38" started-at="2020-01-17T15:37:30Z" finished-at="2020-01-17T15:37:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- when_SidesOfSameLengthButDifferentSuccessiveCharactersAreDiffed_Expect_RangedPositionOfDifferentCharacters -->
      </class> <!-- requests.DifferServiceTest -->
      <class name="requests.SideServiceTest">
        <test-method status="PASS" signature="when_AlphabetOnlyIsEnteredAsID_Expect_404NotFound()[pri:0, instance:requests.SideServiceTest@614c5515]" name="when_AlphabetOnlyIsEnteredAsID_Expect_404NotFound" duration-ms="1146" started-at="2020-01-17T15:37:28Z" finished-at="2020-01-17T15:37:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- when_AlphabetOnlyIsEnteredAsID_Expect_404NotFound -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:requests.SideServiceTest@614c5515]" name="beforeTest" is-config="true" duration-ms="0" started-at="2020-01-17T15:37:28Z" finished-at="2020-01-17T15:37:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="when_AlphanumericValueIsEnteredAsID_Expect_404NotFound()[pri:0, instance:requests.SideServiceTest@614c5515]" name="when_AlphanumericValueIsEnteredAsID_Expect_404NotFound" duration-ms="22" started-at="2020-01-17T15:37:29Z" finished-at="2020-01-17T15:37:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- when_AlphanumericValueIsEnteredAsID_Expect_404NotFound -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:requests.SideServiceTest@614c5515]" name="beforeTest" is-config="true" duration-ms="0" started-at="2020-01-17T15:37:29Z" finished-at="2020-01-17T15:37:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="when_BodyDataIsNotBase64Encoded_Expect_DataNotBase64Exception()[pri:0, instance:requests.SideServiceTest@614c5515]" name="when_BodyDataIsNotBase64Encoded_Expect_DataNotBase64Exception" duration-ms="228" started-at="2020-01-17T15:37:29Z" finished-at="2020-01-17T15:37:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- when_BodyDataIsNotBase64Encoded_Expect_DataNotBase64Exception -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:requests.SideServiceTest@614c5515]" name="beforeTest" is-config="true" duration-ms="0" started-at="2020-01-17T15:37:29Z" finished-at="2020-01-17T15:37:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="when_BodyIsNotPassedInSideRequest_Expect_400BadRequest()[pri:0, instance:requests.SideServiceTest@614c5515]" name="when_BodyIsNotPassedInSideRequest_Expect_400BadRequest" duration-ms="25" started-at="2020-01-17T15:37:29Z" finished-at="2020-01-17T15:37:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- when_BodyIsNotPassedInSideRequest_Expect_400BadRequest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:requests.SideServiceTest@614c5515]" name="beforeTest" is-config="true" duration-ms="0" started-at="2020-01-17T15:37:29Z" finished-at="2020-01-17T15:37:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="when_EmptyStringIsEnteredAsID_Expect_404NotFound()[pri:0, instance:requests.SideServiceTest@614c5515]" name="when_EmptyStringIsEnteredAsID_Expect_404NotFound" duration-ms="17" started-at="2020-01-17T15:37:29Z" finished-at="2020-01-17T15:37:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- when_EmptyStringIsEnteredAsID_Expect_404NotFound -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:requests.SideServiceTest@614c5515]" name="beforeTest" is-config="true" duration-ms="0" started-at="2020-01-17T15:37:29Z" finished-at="2020-01-17T15:37:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:requests.SideServiceTest@614c5515]" name="beforeTest" is-config="true" duration-ms="0" started-at="2020-01-17T15:37:29Z" finished-at="2020-01-17T15:37:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="when_EmptyStringIsPassedAsBody_Expect_400BadRequest()[pri:0, instance:requests.SideServiceTest@614c5515]" name="when_EmptyStringIsPassedAsBody_Expect_400BadRequest" duration-ms="18" started-at="2020-01-17T15:37:29Z" finished-at="2020-01-17T15:37:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- when_EmptyStringIsPassedAsBody_Expect_400BadRequest -->
        <test-method status="PASS" signature="when_EmptyStringIsPassedAsSide_Expect_SideNameNotSupportedException()[pri:0, instance:requests.SideServiceTest@614c5515]" name="when_EmptyStringIsPassedAsSide_Expect_SideNameNotSupportedException" duration-ms="10" started-at="2020-01-17T15:37:29Z" finished-at="2020-01-17T15:37:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- when_EmptyStringIsPassedAsSide_Expect_SideNameNotSupportedException -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:requests.SideServiceTest@614c5515]" name="beforeTest" is-config="true" duration-ms="0" started-at="2020-01-17T15:37:29Z" finished-at="2020-01-17T15:37:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="when_LeftAndRightSideRequestsAreMadeWithSameID_Expect_AcceptedDataForLeftAndRight()[pri:0, instance:requests.SideServiceTest@614c5515]" name="when_LeftAndRightSideRequestsAreMadeWithSameID_Expect_AcceptedDataForLeftAndRight" duration-ms="26" started-at="2020-01-17T15:37:29Z" finished-at="2020-01-17T15:37:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- when_LeftAndRightSideRequestsAreMadeWithSameID_Expect_AcceptedDataForLeftAndRight -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:requests.SideServiceTest@614c5515]" name="beforeTest" is-config="true" duration-ms="0" started-at="2020-01-17T15:37:29Z" finished-at="2020-01-17T15:37:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:requests.SideServiceTest@614c5515]" name="beforeTest" is-config="true" duration-ms="1" started-at="2020-01-17T15:37:29Z" finished-at="2020-01-17T15:37:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="when_OnlyWhiteSpacesIsEnteredAsSide_Expect_SideNameNotSupportedException()[pri:0, instance:requests.SideServiceTest@614c5515]" name="when_OnlyWhiteSpacesIsEnteredAsSide_Expect_SideNameNotSupportedException" duration-ms="13" started-at="2020-01-17T15:37:29Z" finished-at="2020-01-17T15:37:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- when_OnlyWhiteSpacesIsEnteredAsSide_Expect_SideNameNotSupportedException -->
        <test-method status="PASS" signature="when_SameSideRequestsAreMadeWithSameID_Expect_UpdatedData()[pri:0, instance:requests.SideServiceTest@614c5515]" name="when_SameSideRequestsAreMadeWithSameID_Expect_UpdatedData" duration-ms="30" started-at="2020-01-17T15:37:29Z" finished-at="2020-01-17T15:37:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- when_SameSideRequestsAreMadeWithSameID_Expect_UpdatedData -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:requests.SideServiceTest@614c5515]" name="beforeTest" is-config="true" duration-ms="0" started-at="2020-01-17T15:37:29Z" finished-at="2020-01-17T15:37:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:requests.SideServiceTest@614c5515]" name="beforeTest" is-config="true" duration-ms="0" started-at="2020-01-17T15:37:30Z" finished-at="2020-01-17T15:37:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="when_SideRequestContentTypeIsHTML_Expect_415UnsupportedMediaType()[pri:0, instance:requests.SideServiceTest@614c5515]" name="when_SideRequestContentTypeIsHTML_Expect_415UnsupportedMediaType" duration-ms="42" started-at="2020-01-17T15:37:30Z" finished-at="2020-01-17T15:37:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- when_SideRequestContentTypeIsHTML_Expect_415UnsupportedMediaType -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:requests.SideServiceTest@614c5515]" name="beforeTest" is-config="true" duration-ms="1" started-at="2020-01-17T15:37:30Z" finished-at="2020-01-17T15:37:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="when_SideRequestContentTypeIsText_Expect_415UnsupportedMediaType()[pri:0, instance:requests.SideServiceTest@614c5515]" name="when_SideRequestContentTypeIsText_Expect_415UnsupportedMediaType" duration-ms="13" started-at="2020-01-17T15:37:30Z" finished-at="2020-01-17T15:37:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- when_SideRequestContentTypeIsText_Expect_415UnsupportedMediaType -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:requests.SideServiceTest@614c5515]" name="beforeTest" is-config="true" duration-ms="0" started-at="2020-01-17T15:37:30Z" finished-at="2020-01-17T15:37:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="when_SideRequestContentTypeIsXml_Expect_415UnsupportedMediaType()[pri:0, instance:requests.SideServiceTest@614c5515]" name="when_SideRequestContentTypeIsXml_Expect_415UnsupportedMediaType" duration-ms="13" started-at="2020-01-17T15:37:30Z" finished-at="2020-01-17T15:37:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- when_SideRequestContentTypeIsXml_Expect_415UnsupportedMediaType -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:requests.SideServiceTest@614c5515]" name="beforeTest" is-config="true" duration-ms="1" started-at="2020-01-17T15:37:30Z" finished-at="2020-01-17T15:37:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="when_SideRequestHasNoContentType_Expect_415UnsupportedMediaType()[pri:0, instance:requests.SideServiceTest@614c5515]" name="when_SideRequestHasNoContentType_Expect_415UnsupportedMediaType" duration-ms="25" started-at="2020-01-17T15:37:30Z" finished-at="2020-01-17T15:37:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- when_SideRequestHasNoContentType_Expect_415UnsupportedMediaType -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:requests.SideServiceTest@614c5515]" name="beforeTest" is-config="true" duration-ms="0" started-at="2020-01-17T15:37:30Z" finished-at="2020-01-17T15:37:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="when_SideRequestMethodIsPUT_Expect_405MethodNotAllowed()[pri:0, instance:requests.SideServiceTest@614c5515]" name="when_SideRequestMethodIsPUT_Expect_405MethodNotAllowed" duration-ms="25" started-at="2020-01-17T15:37:30Z" finished-at="2020-01-17T15:37:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- when_SideRequestMethodIsPUT_Expect_405MethodNotAllowed -->
        <test-method status="PASS" signature="when_UpIsEnteredAsSide_Expect_SideNameNotSupportedException()[pri:0, instance:requests.SideServiceTest@614c5515]" name="when_UpIsEnteredAsSide_Expect_SideNameNotSupportedException" duration-ms="12" started-at="2020-01-17T15:37:30Z" finished-at="2020-01-17T15:37:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- when_UpIsEnteredAsSide_Expect_SideNameNotSupportedException -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:requests.SideServiceTest@614c5515]" name="beforeTest" is-config="true" duration-ms="0" started-at="2020-01-17T15:37:30Z" finished-at="2020-01-17T15:37:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:requests.SideServiceTest@614c5515]" name="beforeTest" is-config="true" duration-ms="0" started-at="2020-01-17T15:37:30Z" finished-at="2020-01-17T15:37:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="when_ValidLeftSideRequestIsMade_Expect_AcceptedLeftSideBase64Data()[pri:0, instance:requests.SideServiceTest@614c5515]" name="when_ValidLeftSideRequestIsMade_Expect_AcceptedLeftSideBase64Data" duration-ms="12" started-at="2020-01-17T15:37:30Z" finished-at="2020-01-17T15:37:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- when_ValidLeftSideRequestIsMade_Expect_AcceptedLeftSideBase64Data -->
        <test-method status="PASS" signature="when_ValidRightSideRequestIsMade_Expect_AcceptedRightSideBase64Data()[pri:0, instance:requests.SideServiceTest@614c5515]" name="when_ValidRightSideRequestIsMade_Expect_AcceptedRightSideBase64Data" duration-ms="11" started-at="2020-01-17T15:37:30Z" finished-at="2020-01-17T15:37:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- when_ValidRightSideRequestIsMade_Expect_AcceptedRightSideBase64Data -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:requests.SideServiceTest@614c5515]" name="beforeTest" is-config="true" duration-ms="0" started-at="2020-01-17T15:37:30Z" finished-at="2020-01-17T15:37:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
      </class> <!-- requests.SideServiceTest -->
    </test> <!-- Differ Regression Tests -->
  </suite> <!-- Differ Regression Test Suite -->
</testng-results>
